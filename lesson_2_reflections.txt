1. What happens when you initialize a repository? Why do you need to do it?

Git creates a folder called .git. This will be used to track and log changes to the files within the new git repository.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area, I think, is an intermediate between the working dirctory and the respository, allowing you to choose multiple files before commiting them to the repository.

3. How can you use the staging area to make sure you have one commit per logical change?

I guess I can use the staging area to hang on to the file until Ive made changes, then commit it. Im not really sure.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are useful for make major changes while retaining a working copy without the need to search for a working commit to checkout.

5. How do the diagrams help you visualize the branch structure?

By showing the structure visually, it makes more sense.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a merging of two different branches of code into one file. It only makes sense to show it in a diagram as being linked to two separate branched.

7. What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

It saves alot of time and can prevent some pretty interesting and unwanted issues.